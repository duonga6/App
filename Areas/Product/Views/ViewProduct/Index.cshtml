@using App.Components
@model List<ProductModel>
@{
    List<CategoryProduct> categories = ViewBag.categories as List<CategoryProduct>;
    CategoryProduct category = ViewBag.category;
    ViewData["Title"] = (category == null) ? "Tất cả sản phẩm" : category.Title;
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-action="Index">Home</a></li>
        @if (category != null)
        {
            var li = category.GetParentCategory();
            foreach (var l in li)
            {
                <li class="breadcrumb-item active" aria-current="page">
                    <a asp-action="Index" asp-controller="ViewProduct" asp-area="Product" asp-route-slug="@l.Slug">@l.Title</a>
                </li>
            }
            <li class="breadcrumb-item active" aria-current="page">
                <a asp-action="Index" asp-controller="ViewProduct" asp-area="Product"
                    asp-route-slug="@category.Slug">@category.Title</a>
            </li>
        }
    </ol>
</nav>

<h5>@ViewData["Title"]</h5>
<hr>

<div class="d-flex justify-content-between flex-wrap">

    @foreach (var product in Model)
    {
        var ImgSrc = "/contents/no-image.jpg";
        if (product.Photos.Count() > 0)
        {
            ImgSrc = $"/contents/Products/{product.Photos.FirstOrDefault().FileName}";
        }
        <div class="card mb-2" style="width: 32%;">
            <img src="@ImgSrc" class="card-img-top" alt="@ImgSrc">
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
                <p class="card-text">@product.Description</p>
                <p class="card-text text-danger">
                    <strong class="text-success">
                        @{
                            List<string> cateList = new List<string>();
                            foreach (var postcate in product.ProductCategories)
                            {
                                cateList.Add(postcate.Category.Title);
                            }
                        }
                        @string.Join(", ", cateList)
                    </strong>
                </p>
                <a asp-action="Details" asp-controller="ViewProduct" asp-area="Product"
                    asp-route-productslug="@product.Slug" class="card-link">Chi tiết</a>
                <a asp-action="AddToCart" asp-controller="ViewProduct" asp-area="Product" asp-route-productid="@product.ProductID" class="btn btn-primary ml-4">Mua ngay</a>
            </div>
        </div>
    }
</div>

@{
    PagingModel pagingModel = new PagingModel()
            {
                currentpage = ViewBag.CurrentPage,
                countpages = ViewBag.CountPage,
                generateUrl = (pageNumber) => Url.Action("Index", new
                {
                    p = pageNumber
                })
            };
}

<partial name="_PagingXTL" model="pagingModel" />

@section SideBar {
    <h5>Danh mục</h5>
    <hr>
    @await Component.InvokeAsync("App.Components.CategoryProductSidebar",
new CategoryProductSidebar.CategorySidebarData() {
Categories = categories,
level = 0,
categoryslug = ViewBag.slug
})
}